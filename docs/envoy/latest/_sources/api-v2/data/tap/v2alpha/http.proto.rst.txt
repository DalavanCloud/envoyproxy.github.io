.. _envoy_api_file_envoy/data/tap/v2alpha/http.proto:

HTTP tap data
=============


.. _envoy_api_msg_data.tap.v2alpha.HttpBufferedTrace:

data.tap.v2alpha.HttpBufferedTrace
----------------------------------

`[data.tap.v2alpha.HttpBufferedTrace proto] <https://github.com/envoyproxy/envoy/blob/master/api/envoy/data/tap/v2alpha/http.proto#L10>`_

A fully buffered HTTP trace message.

.. code-block:: json

  {
    "request": "{...}",
    "response": "{...}"
  }

.. _envoy_api_field_data.tap.v2alpha.HttpBufferedTrace.request:

request
  (:ref:`data.tap.v2alpha.HttpBufferedTrace.Message <envoy_api_msg_data.tap.v2alpha.HttpBufferedTrace.Message>`) Request message.
  
  
.. _envoy_api_field_data.tap.v2alpha.HttpBufferedTrace.response:

response
  (:ref:`data.tap.v2alpha.HttpBufferedTrace.Message <envoy_api_msg_data.tap.v2alpha.HttpBufferedTrace.Message>`) Response message.
  
  
.. _envoy_api_msg_data.tap.v2alpha.HttpBufferedTrace.Message:

data.tap.v2alpha.HttpBufferedTrace.Message
------------------------------------------

`[data.tap.v2alpha.HttpBufferedTrace.Message proto] <https://github.com/envoyproxy/envoy/blob/master/api/envoy/data/tap/v2alpha/http.proto#L12>`_

HTTP message wrapper.

.. code-block:: json

  {
    "headers": [],
    "trailers": []
  }

.. _envoy_api_field_data.tap.v2alpha.HttpBufferedTrace.Message.headers:

headers
  (:ref:`core.HeaderValue <envoy_api_msg_core.HeaderValue>`) Message headers.
  
  
.. _envoy_api_field_data.tap.v2alpha.HttpBufferedTrace.Message.trailers:

trailers
  (:ref:`core.HeaderValue <envoy_api_msg_core.HeaderValue>`) Message trailers.
  
  



.. _envoy_api_file_envoy/data/tap/v2alpha/wrapper.proto:

Tap data wrappers
=================


.. _envoy_api_msg_data.tap.v2alpha.BufferedTraceWrapper:

data.tap.v2alpha.BufferedTraceWrapper
-------------------------------------

`[data.tap.v2alpha.BufferedTraceWrapper proto] <https://github.com/envoyproxy/envoy/blob/master/api/envoy/data/tap/v2alpha/wrapper.proto#L14>`_

Wrapper for all fully buffered tap traces that Envoy emits. This is required for sending traces
over gRPC APIs or more easily persisting binary messages to files.

.. code-block:: json

  {
    "http_buffered_trace": "{...}",
    "socket_buffered_trace": "{...}"
  }

.. _envoy_api_field_data.tap.v2alpha.BufferedTraceWrapper.http_buffered_trace:

http_buffered_trace
  (:ref:`data.tap.v2alpha.HttpBufferedTrace <envoy_api_msg_data.tap.v2alpha.HttpBufferedTrace>`) An HTTP buffered tap trace.
  
  
  
  Precisely one of :ref:`http_buffered_trace <envoy_api_field_data.tap.v2alpha.BufferedTraceWrapper.http_buffered_trace>`, :ref:`socket_buffered_trace <envoy_api_field_data.tap.v2alpha.BufferedTraceWrapper.socket_buffered_trace>` must be set.
  
.. _envoy_api_field_data.tap.v2alpha.BufferedTraceWrapper.socket_buffered_trace:

socket_buffered_trace
  (:ref:`data.tap.v2alpha.SocketTrace <envoy_api_msg_data.tap.v2alpha.SocketTrace>`) A buffered socket tap trace.
  
  
  
  Precisely one of :ref:`http_buffered_trace <envoy_api_field_data.tap.v2alpha.BufferedTraceWrapper.http_buffered_trace>`, :ref:`socket_buffered_trace <envoy_api_field_data.tap.v2alpha.BufferedTraceWrapper.socket_buffered_trace>` must be set.
  


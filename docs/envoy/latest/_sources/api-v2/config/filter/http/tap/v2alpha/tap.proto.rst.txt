.. _envoy_api_file_envoy/config/filter/http/tap/v2alpha/tap.proto:

Tap
===

Tap :ref:`configuration overview <config_http_filters_tap>`.

.. _envoy_api_msg_config.filter.http.tap.v2alpha.Tap:

config.filter.http.tap.v2alpha.Tap
----------------------------------

`[config.filter.http.tap.v2alpha.Tap proto] <https://github.com/envoyproxy/envoy/blob/master/api/envoy/config/filter/http/tap/v2alpha/tap.proto#L13>`_

Top level configuration for the tap filter.

.. code-block:: json

  {
    "admin_config": "{...}"
  }

.. _envoy_api_field_config.filter.http.tap.v2alpha.Tap.admin_config:

admin_config
  (:ref:`config.filter.http.tap.v2alpha.AdminConfig <envoy_api_msg_config.filter.http.tap.v2alpha.AdminConfig>`, *REQUIRED*) If specified, the tap filter will be configured via an admin handler.
  
  
  


.. _envoy_api_msg_config.filter.http.tap.v2alpha.AdminConfig:

config.filter.http.tap.v2alpha.AdminConfig
------------------------------------------

`[config.filter.http.tap.v2alpha.AdminConfig proto] <https://github.com/envoyproxy/envoy/blob/master/api/envoy/config/filter/http/tap/v2alpha/tap.proto#L24>`_

Configuration for the admin handler. See :ref:`here <config_http_filters_tap_admin_handler>` for
more information.

.. code-block:: json

  {
    "config_id": "..."
  }

.. _envoy_api_field_config.filter.http.tap.v2alpha.AdminConfig.config_id:

config_id
  (`string <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_, *REQUIRED*) Opaque configuration ID. When requests are made to the admin handler, the passed opaque ID is
  matched to the configured filter opaque ID to determine which filter to configure.
  
  

